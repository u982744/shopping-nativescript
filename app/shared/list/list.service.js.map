{"version":3,"file":"list.service.js","sourceRoot":"","sources":["list.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Http, Headers} from \"@angular/http\";\nimport {Config} from \"../config\";\nimport {List} from \"./list\";\nimport {Observable} from \"rxjs/Rx\";\nimport \"rxjs/add/operator/map\";\n\n@Injectable()\nexport class ListService {\n  constructor(private _http: Http) {}\n\n  load() {\n     //console.log(\"Config\", Config);\n    return this._http.get(\n      Config.apiUrl + \"list/\" + Config.userId\n    )\n    .map(res => res.json())\n    .map(data => {\n      let list = [];\n      data.result.forEach((item) => {\n        list.push(new List(item._id, item.name));\n      });\n      return list;\n    })\n    .catch(this.handleErrors);\n  }\n\n  add(name: string) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n\n    return this._http.post(\n      Config.apiUrl + \"list\",\n      JSON.stringify({\n        name: name,\n        userId: Config.userId\n      }),\n      { headers: headers }\n    )\n    .map(res => res.json())\n    .map(data => {\n       //console.log(\"add map\", data.id, name);\n      return new List(data.id, name);\n    })\n    .catch(this.handleErrors);\n  }\n\n  delete(id: string) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n\n    return this._http.delete(\n      Config.apiUrl + \"list/\" + id,\n      { headers: headers }\n    )\n    .map(res => res.json())\n    .catch(this.handleErrors);\n  }\n\n  share(listId: string, email: string) {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n\n    return this._http.put(\n      Config.apiUrl + \"list/\" + listId + \"/adduser/\" + email,\n      JSON.stringify({}),\n      { headers: headers }\n    )\n    .map(res => res.json())\n    .catch(this.handleErrors);\n  }\n\n  handleErrors(error) {\n     //console.log(\"handleErrors\", error);\n     //console.log(JSON.stringify(error.json()));\n    return Observable.throw(error);\n  }\n}"]}