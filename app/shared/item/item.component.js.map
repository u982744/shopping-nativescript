{"version":3,"file":"item.component.js","sourceRoot":"","sources":["item.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6D,eAAe,CAAC,CAAA;AAc7E;IAUI,kBAAoB,KAAa;QAAb,UAAK,GAAL,KAAK,CAAQ;QAJvB,iBAAY,GAAG,IAAI,mBAAY,EAAE,CAAC;QAClC,eAAU,GAAG,IAAI,mBAAY,EAAE,CAAC;QAChC,eAAU,GAAG,IAAI,mBAAY,EAAE,CAAC;IAEN,CAAC;IAErC,yBAAM,GAAN,UAAO,EAAE,EAAE,KAAK;QACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;IACnD,CAAC;IAED,sBAAG,GAAH,UAAI,EAAE;QAAN,iBAWC;QAVG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC7B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;gBACX,KAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACjC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAzBD;QAAC,YAAK,EAAE;;0CAAA;IACR;QAAC,YAAK,EAAE;;gDAAA;IACR;QAAC,YAAK,EAAE;;gDAAA;IAER;QAAC,aAAM,EAAE;;kDAAA;IACT;QAAC,aAAM,EAAE;;gDAAA;IACT;QAAC,aAAM,EAAE;;gDAAA;IApBb;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,8RAKT;YACD,SAAS,EAAE,CAAC,sBAAsB,CAAC;YACnC,SAAS,EAAE,EAAE;SACd,CAAC;;gBAAA;IA8BF,eAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,gBAAQ,WA4BpB,CAAA","sourcesContent":["import {Component, Input, Output, EventEmitter, NgZone} from \"@angular/core\";\n\n@Component({\n  selector: \"item\",\n  template: `\n    <GridLayout columns=\"*, auto\" class=\"item\">\n        <Label [ngClass]=\"{'done': item.done}\" [text]=\"item.name\" class=\"medium-spacing\" (tap)=\"tap(item.id)\"></Label>\n        <Label text=\"Delete\" col=\"1\" (tap)=\"delete(item.id, i)\"></Label>\n    </GridLayout>\n  `,\n  styleUrls: [\"shared/item/item.css\"],\n  providers: []\n})\n\nexport class ItemView {\n    private name: string;\n    @Input() item;\n    @Input() isViewable;\n    @Input() isDoneable;\n\n    @Output() deleteOutput = new EventEmitter();\n    @Output() viewOutput = new EventEmitter();\n    @Output() doneOutput = new EventEmitter();\n\n    constructor(private _zone: NgZone) {}\n\n    delete(id, index) {\n        this.deleteOutput.emit({id: id, index: index});\n    }\n\n    tap(id) {\n        if (this.isViewable) {\n            this.viewOutput.emit(id);\n        }\n\n        if (this.isDoneable) {\n            this._zone.run(() => {\n                this.item.done = !this.item.done;\n                this.doneOutput.emit({id: id, done: this.item.done});\n            });\n        }\n    }\n}"]}